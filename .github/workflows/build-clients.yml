name: Build clients
on:
  release:
    types: [published]

jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ["linux", "windows", "macOS"]
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # avoid shallow clone so MinVer can do its work.

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7
      
      - name: Setup rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build
        shell: bash
        run: |
          release_name="Tunnlr-$GITHUB_REF_NAME-${{ matrix.target }}"

          # Build everything
          dotnet publish src/Tunnlr.Client.Web --runtime "${{ matrix.target }}" -c Release -o "assets"

      - name: Build Tunnlr.Client.Wrapper (MacOS)
        shell: bash
        if: matrix.target ==  'osx-x64'
        run: |
          release_name="Tunnlr-$GITHUB_REF_NAME-${{ matrix.target }}"

          brew install gtk+3
          cargo build --release
          mv target/release/Tunnlr build/macOS/Contents/MacOS
          mv -r assets/* build/macOS/Contents/MacOS

          mv build/macOS "${release_name}".app

      - name: Build Tunnlr.Client.Wrapper (Windows)
        shell: bash
        if: matrix.target == 'win-x64'
        run: |
          release_name="Tunnlr-$GITHUB_REF_NAME-${{ matrix.target }}"

          cargo build --release

          mv target/release/Tunnlr  "${release_name}.exe"      

      - name: Build Tunnlr.Client.Wrapper (Linux)
        shell: bash
        if: matrix.target == 'linux-x64'
        run: |
          release_name="Tunnlr-$GITHUB_REF_NAME-${{ matrix.target }}"

          sudo apt install build-essential libgtk-3-dev
          cargo build --release

          mv target/release/Tunnlr  "${release_name}"      

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "Tunnlr-*"
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
