@using Tunnlr.Client.Features.Interceptors
@using System.Text.RegularExpressions
@using Tunnlr.Client.Features.Interceptors.Core
@namespace Tunnlr.Client.Web.Components.Dialogs.UpdateInterceptorDialog.Inputs

<MudTextField 
    Label="@UiElement.DisplayName"
    Value="Value"
    TextChanged="Update"
    InputType="GetInputType(UiElement)"
    Validation="@(new Func<string, IEnumerable<string>>(Validate))"
/>

@code {
    [Parameter] public required UiElement UiElement { get; set; }
    [Parameter] public required EventCallback<string> Update { get; set; }
    [Parameter] public required string Value { get; set; }
    
        
    private InputType GetInputType(UiElement uiElement)
    {
        return uiElement.ElementType switch
        {
            UiElementTypes.NumbersInput => InputType.Number,
            _ => InputType.Text
        };
    }
    
    private IEnumerable<string?> Validate(string value)
    {
        if (string.IsNullOrWhiteSpace(UiElement.ValidationRegex)) yield break;
        
        var regex = new Regex(UiElement.ValidationRegex);
        if (!regex.Match(value).Success)
        {
            yield return $"{UiElement.DisplayName} is invalid";
        }

        yield return null;
    }
}