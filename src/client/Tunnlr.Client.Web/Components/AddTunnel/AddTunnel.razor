@using Tunnlr.Client.Web.Persistence
@using Tunnlr.Client.Persistence
@using Tunnlr.Client.Persistence.Models
@using Tunnlr.Client.Core.Services
@namespace Tunnlr.Client.Web.Components.AddTunnel
@inject TunnelService TunnelService
@inject ISnackbar Snackbar
<MudPaper Class="pa-4">
    <MudForm Model="@_model"@bind-IsValid="@_success" @bind-Errors="@_errors">
        <MudTextField T="string" Label="Target URI" Required="true" @bind-Value="_model.TargetUri" Placeholder="https://127.0.0.1:8080" RequiredError="Target URI is required!" />
        <div class="d-flex align-center justify-space-between">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!_success)" Class="ml-auto" OnClick="Add">Add</MudButton>
        </div>
    </MudForm>   
</MudPaper>

@code {
    bool _success;
    string[] _errors = { };
    private AddTunnelForm _model = new ();
    
    [Parameter]
    public Action? OnUpdate { get; set; }

    private async Task Add()
    {
        if (string.IsNullOrWhiteSpace(_model.TargetUri)) return;

        try
        {
            await TunnelService.AddTunnel(_model.TargetUri);
            OnUpdate?.Invoke();
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }
    }
}